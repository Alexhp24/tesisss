const express = require("express");
const mongoose = require("mongoose");
const cors = require("cors");

const app = express();
app.use(express.json());
app.use(cors());

//  Conexión a MongoDB Atlas
mongoose
  .connect("mongodb+srv://fieldsmart25:Hidalgo0696@fieldsmart01.heru0rb.mongodb.net/?retryWrites=true&w=majority&appName=fieldsmart01", { useNewUrlParser: true, useUnifiedTopology: true })
  .then(() => console.log("✅ Conectado a MongoDB"))
  .catch(err => console.log("❌ Error MongoDB:", err));

//  Schema
const DatoSchema = new mongoose.Schema({
  temperatura: Number,
  estado: String,
  fecha: { type: Date, default: Date.now }
});

const Dato = mongoose.model("Dato", DatoSchema);

//  Endpoint para recibir datos del ESP
app.post("/api/datos", async (req, res) => {
  try {
    const nuevo = new Dato(req.body);
    await nuevo.save();
    res.status(201).send("✅ Dato guardado correctamente"); 
  } catch (e) {
    res.status(500).send("❌ Error al guardar dato"); 
  }
});

// Ver datos guardados
app.get("/api/datos", async (req, res) => { 
  const datos = await Dato.find().sort({ fecha: -1 });
  res.json(datos);
});

// Iniciar servidor
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`🌐 Servidor funcionando en puerto ${PORT}`));
